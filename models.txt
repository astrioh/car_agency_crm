# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class BodyTypes(models.Model):
    id_body_type = models.AutoField(primary_key=True)
    body_type_chr_name = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'body_types'


class Brands(models.Model):
    id_brand = models.AutoField(primary_key=True)
    brand_chr_name = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'brands'


class CarPhotos(models.Model):
    id_car_photo = models.AutoField(primary_key=True)
    car_photo_img_image = models.CharField(max_length=150, blank=True, null=True)
    id_car = models.ForeignKey('Cars', models.DO_NOTHING, db_column='id_car')

    class Meta:
        managed = False
        db_table = 'car_photos'


class CarTypes(models.Model):
    id_car_type = models.AutoField(primary_key=True)
    car_type_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'car_types'


class Cars(models.Model):
    id_car = models.AutoField(primary_key=True)
    id_model = models.ForeignKey('Models', models.DO_NOTHING, db_column='id_model', blank=True, null=True)
    id_dealer = models.ForeignKey('Dealers', models.DO_NOTHING, db_column='id_dealer')
    car_chr_pts = models.CharField(max_length=25)
    car_chr_vin = models.CharField(max_length=25)
    id_car_type = models.ForeignKey(CarTypes, models.DO_NOTHING, db_column='id_car_type')
    car_int_release_year = models.SmallIntegerField()
    car_dec_price = models.DecimalField(max_digits=18, decimal_places=0)
    car_chr_color = models.CharField(max_length=15)
    car_int_mileage = models.IntegerField(blank=True, null=True)
    car_chr_wheel = models.CharField(max_length=50, blank=True, null=True)
    id_body_type = models.ForeignKey(BodyTypes, models.DO_NOTHING, db_column='id_body_type')
    id_transmission_type = models.ForeignKey('TransmissionTypes', models.DO_NOTHING, db_column='id_transmission_type')
    id_drivetrain_type = models.ForeignKey('DrivetrainTypes', models.DO_NOTHING, db_column='id_drivetrain_type')
    id_engine_type = models.ForeignKey('EngineTypes', models.DO_NOTHING, db_column='id_engine_type')
    car_dec_engine_volume = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    car_int_engine_power = models.IntegerField(blank=True, null=True)
    car_chk_active = models.BooleanField()

    class Meta:
        managed = False
        db_table = 'cars'


class Clients(models.Model):
    id_client = models.AutoField(primary_key=True)
    client_chr_lastname = models.CharField(max_length=30)
    client_chr_firstname = models.CharField(max_length=30)
    client_chr_middlename = models.CharField(max_length=30, blank=True, null=True)
    client_chr_phone = models.CharField(max_length=20)
    client_dat_birthday = models.DateField()
    client_chr_pass_series = models.CharField(max_length=5)
    client_chr_pass_number = models.CharField(max_length=10)
    client_chr_address = models.CharField(max_length=80, blank=True, null=True)
    client_chr_email = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'clients'


class ContractLog(models.Model):
    id_contract_log = models.AutoField(primary_key=True)
    id_contract = models.IntegerField()
    price_old = models.DecimalField(max_digits=18, decimal_places=0, blank=True, null=True)
    price_new = models.DecimalField(max_digits=18, decimal_places=0, blank=True, null=True)
    log_dat_date = models.DateField()
    log_sys_user = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'contract_log'


class Contracts(models.Model):
    id_contract = models.AutoField(primary_key=True)
    id_employee = models.ForeignKey('Employees', models.DO_NOTHING, db_column='id_employee')
    id_client = models.ForeignKey(Clients, models.DO_NOTHING, db_column='id_client')
    id_car = models.ForeignKey(Cars, models.DO_NOTHING, db_column='id_car')
    contract_dat_date = models.DateField(blank=True, null=True)
    contract_dec_price = models.DecimalField(max_digits=18, decimal_places=0)
    id_payment_type = models.ForeignKey('PaymentTypes', models.DO_NOTHING, db_column='id_payment_type')

    class Meta:
        managed = False
        db_table = 'contracts'


class DealerTypes(models.Model):
    id_dealer_type = models.AutoField(primary_key=True)
    dealer_type_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'dealer_types'


class Dealers(models.Model):
    id_dealer = models.AutoField(primary_key=True)
    dealer_chr_name = models.CharField(max_length=60)
    dealer_img_image = models.CharField(max_length=80, blank=True, null=True)
    dealer_chr_contact = models.CharField(max_length=80, blank=True, null=True)
    dealer_chr_address = models.CharField(max_length=130, blank=True, null=True)
    dealer_chr_phone = models.CharField(max_length=20)
    dealer_chr_email = models.CharField(max_length=30, blank=True, null=True)
    id_dealer_type = models.ForeignKey(DealerTypes, models.DO_NOTHING, db_column='id_dealer_type')

    class Meta:
        managed = False
        db_table = 'dealers'


class DefectTypes(models.Model):
    id_defect_type = models.AutoField(primary_key=True)
    defect_type_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'defect_types'


class Defects(models.Model):
    id_defect = models.AutoField(primary_key=True)
    id_defect_type = models.ForeignKey(DefectTypes, models.DO_NOTHING, db_column='id_defect_type')
    defect_chr_name = models.CharField(max_length=50)
    defect_txt_text = models.CharField(max_length=350, blank=True, null=True)
    defect_img_image = models.CharField(max_length=80, blank=True, null=True)
    id_car = models.ForeignKey(Cars, models.DO_NOTHING, db_column='id_car')

    class Meta:
        managed = False
        db_table = 'defects'


class DrivetrainTypes(models.Model):
    id_drivetrain_type = models.AutoField(primary_key=True)
    drivetrain_type_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'drivetrain_types'


class Employees(models.Model):
    id_employee = models.AutoField(primary_key=True)
    employee_chr_login = models.CharField(max_length=30)
    employee_chr_password = models.CharField(max_length=30)
    employee_chr_lastname = models.CharField(max_length=30)
    employee_chr_firstname = models.CharField(max_length=30)
    employee_chr_middlename = models.CharField(max_length=30)
    employee_chr_sex = models.CharField(max_length=10)
    employee_dat_birthday = models.DateField()
    employee_chr_pass_series = models.CharField(max_length=5)
    employee_chr_pass_number = models.CharField(max_length=10)
    employee_chr_inn = models.CharField(max_length=15, blank=True, null=True)
    employee_chr_email = models.CharField(max_length=30)
    employee_chr_address = models.CharField(max_length=80, blank=True, null=True)
    employee_chr_phone = models.CharField(max_length=20)
    employee_chk_active = models.BooleanField()
    id_role = models.ForeignKey('Roles', models.DO_NOTHING, db_column='id_role')

    class Meta:
        managed = False
        db_table = 'employees'


class EngineTypes(models.Model):
    id_engine_type = models.IntegerField(primary_key=True)
    engine_type_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'engine_types'


class Models(models.Model):
    id_model = models.AutoField(primary_key=True)
    model_chr_name = models.CharField(max_length=80)
    id_brand = models.ForeignKey(Brands, models.DO_NOTHING, db_column='id_brand')

    class Meta:
        managed = False
        db_table = 'models'


class PaymentTypes(models.Model):
    id_payment_type = models.AutoField(primary_key=True)
    payment_type_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'payment_types'


class Roles(models.Model):
    id_role = models.AutoField(primary_key=True)
    role_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'roles'


class TransmissionTypes(models.Model):
    id_transmission_type = models.AutoField(primary_key=True)
    transmission_type_chr_name = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'transmission_types'
